worker_processes auto;
error_log stderr notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/custom/?.lua;;";
    lua_shared_dict prometheus_metrics 10M;
    lua_shared_dict rate_limiter_store 10M;
    lua_shared_dict locks 1M;
    lua_shared_dict circuit_breaker_store 1M;
    lua_shared_dict cache_store 50M;

    init_by_lua_block {
        local prometheus = require("resty.prometheus")
        metrics = {}
        prometheus = prometheus.init("prometheus_metrics")
        metrics.requests = prometheus:counter("nginx_http_requests_total", "Total number of HTTP requests", {"model"})
        metrics.request_latency = prometheus:histogram("nginx_request_latency_seconds", "Request latency", {"model"})
        metrics.errors = prometheus:counter("nginx_errors_total", "Number of errors", {"error_type", "model"})
        metrics.token_bucket = prometheus:gauge("nginx_token_bucket_level", "Current level of token bucket", {"model"})
        metrics.circuit_breaker = prometheus:gauge("nginx_circuit_breaker_state", "Circuit breaker state", {"model"})
        metrics.cache_hits = prometheus:counter("nginx_cache_hits_total", "Total cache hits", {"model"})
        metrics.cache_misses = prometheus:counter("nginx_cache_misses_total", "Total cache misses", {"model"})
    }

    server {
        listen 80;

        # Security enhancements
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Use HTTPS if SSL certificates are set up
        # ssl_certificate /path/to/ssl_certificate.crt;
        # ssl_certificate_key /path/to/ssl_certificate.key;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Set security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options DENY;

        location /send_request {
            access_by_lua_file /usr/local/openresty/lualib/custom/handler.lua;
        }

        location /metrics {
            content_by_lua_block {
                prometheus:collect()
            }
        }
    }
}
